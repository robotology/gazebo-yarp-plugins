name: C++ CI Workflow

on:
  push:
  pull_request:
  schedule:
  # * is a special character in YAML so you have to quote this string
  # Execute a "nightly" build at 2 AM UTC 
  - cron:  '0 2 * * *'
  
  
jobs:
  build:
    name: '[${{ matrix.os }}@${{ matrix.build_type }}@yarp:${{ matrix.yarp_version }}@gazebo:11]'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build_type: [Release, Debug]
        os: [ubuntu-18.04, ubuntu-20.04]
        yarp_version: [master]

    steps:
    - uses: actions/checkout@v2
        
    # Print environment variables to simplify development and debugging
    - name: Environment Variables
      shell: bash
      run: env
        
    # ============
    # DEPENDENCIES
    # ============
    - name: Dependencies [Ubuntu]
      if: contains(matrix.os, 'ubuntu')
      shell: bash
      run: |
        sudo sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-latest.list'
        wget http://packages.osrfoundation.org/gazebo.key -O - | sudo apt-key add -
        sudo apt-get update
        sudo apt-get install git build-essential cmake libace-dev libeigen3-dev libopencv-dev 
        sudo apt-get install libgazebo11-dev
        
    - name: Source-based Dependencies [Ubuntu] 
      if: contains(matrix.os, 'ubuntu')
      shell: bash
      run: |
        # YCM
        git clone https://github.com/robotology/ycm
        cd ycm
        git checkout ycm-0.13
        mkdir -p build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/install ..
        cmake --build . --config ${{ matrix.build_type }} --target install 
        # YARP
        cd ${GITHUB_WORKSPACE}
        git clone https://github.com/robotology/yarp
        cd yarp
        git checkout ${{ matrix.yarp_version }}
        mkdir -p build
        cd build
        cmake  -DCMAKE_PREFIX_PATH=${GITHUB_WORKSPACE}/install -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/install ..
        cmake --build . --config ${{ matrix.build_type }} --target install 
 
    # ===================
    # CMAKE-BASED PROJECT
    # ===================
   
    - name: Configure [Ubuntu]
      if: contains(matrix.os, 'ubuntu')
      shell: bash
      run: |
        mkdir -p build
        cd build    
        cmake -DCMAKE_PREFIX_PATH=${GITHUB_WORKSPACE}/install -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
              -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/install -DBUILD_TESTING:BOOL=ON ..
        
    - name: Build
      shell: bash
      run: |
        cd build
        cmake --build . --config ${{ matrix.build_type }} 
      
    - name: Test
      # Workaround for https://github.com/robotology/gazebo-yarp-plugins/issues/530
      if: contains(matrix.os, 'ubuntu')
      shell: bash
      run: |
        cd build
        # Workaround for https://github.com/robotology/gazebo-yarp-plugins/issues/536
        ctest --output-on-failure -C ${{ matrix.build_type }} -E "ControlBoardControlTest" . 

    - name: Install [Ubuntu]
      if: contains(matrix.os, 'ubuntu')
      shell: bash
      run: |
        cd build
        cmake --build . --config ${{ matrix.build_type }} --target install
        
